{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":21783,"byte_end":21789,"line_start":591,"line_end":591,"column_start":60,"column_end":66,"is_primary":true,"text":[{"text":"        let sharpe = compute_annualized_sharpe_from_equity(equity, &all_timestamps_dt);","highlight_start":60,"highlight_end":66}],"label":"expected `&Vec<f64>`, found `Vec<f64>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":21745,"byte_end":21782,"line_start":591,"line_end":591,"column_start":22,"column_end":59,"is_primary":false,"text":[{"text":"        let sharpe = compute_annualized_sharpe_from_equity(equity, &all_timestamps_dt);","highlight_start":22,"highlight_end":59}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected reference `&Vec<_>`\n      found struct `Vec<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"expected because the closure was earlier called with an argument of type `&Vec<f64>`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":21694,"byte_end":21701,"line_start":590,"line_end":590,"column_start":60,"column_end":67,"is_primary":true,"text":[{"text":"        let sharpe = compute_annualized_sharpe_from_equity(&equity, &all_timestamps_dt);","highlight_start":60,"highlight_end":67}],"label":"expected because this argument is of type `&Vec<f64>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":21656,"byte_end":21693,"line_start":590,"line_end":590,"column_start":22,"column_end":59,"is_primary":false,"text":[{"text":"        let sharpe = compute_annualized_sharpe_from_equity(&equity, &all_timestamps_dt);","highlight_start":22,"highlight_end":59}],"label":"in this closure call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"closure parameter defined here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":19374,"byte_end":19395,"line_start":529,"line_end":529,"column_start":50,"column_end":71,"is_primary":true,"text":[{"text":"    let compute_annualized_sharpe_from_equity = |equity_arr: &Vec<f64>, time_index_dt: &Vec<i64>| -> f64 {","highlight_start":50,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider borrowing here","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":21783,"byte_end":21783,"line_start":591,"line_end":591,"column_start":60,"column_end":60,"is_primary":true,"text":[{"text":"        let sharpe = compute_annualized_sharpe_from_equity(equity, &all_timestamps_dt);","highlight_start":60,"highlight_end":60}],"label":null,"suggested_replacement":"&","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:591:60\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m591\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let sharpe = compute_annualized_sharpe_from_equity(equity, &all_timestamps_dt);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `&Vec<f64>`, found `Vec<f64>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected reference `\u001b[0m\u001b[0m\u001b[1m\u001b[35m&\u001b[0m\u001b[0mVec<_>`\u001b[0m\n\u001b[0m                  found struct `Vec<_>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: expected because the closure was earlier called with an argument of type `&Vec<f64>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:590:60\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m590\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let sharpe = compute_annualized_sharpe_from_equity(&equity, &all_timestamps_dt);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mexpected because this argument is of type `&Vec<f64>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this closure call\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: closure parameter defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:529:50\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m529\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let compute_annualized_sharpe_from_equity = |equity_arr: &Vec<f64>, time_index_dt: &Vec<i6\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider borrowing here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m591\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let sharpe = compute_annualized_sharpe_from_equity(\u001b[0m\u001b[0m\u001b[38;5;10m&\u001b[0m\u001b[0mequity, &all_timestamps_dt);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                            \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no method named `ok_or_else` found for enum `Result` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":25026,"byte_end":25036,"line_start":690,"line_end":690,"column_start":39,"column_end":49,"is_primary":true,"text":[{"text":"        let ts_any = v.get_item(\"ts\").ok_or_else(|| PyErr::new::<pyo3::exceptions::PyKeyError, _>(\"ts missing\"))?;","highlight_start":39,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the method `ok_or_else` exists on the type `Option<&PyAny>`","code":null,"level":"note","spans":[{"file_name":"/rustc/1159e78c4747b02ef996e55082b704c09b970588/library/core/src/option.rs","byte_start":50278,"byte_end":50398,"line_start":1356,"line_end":1358,"column_start":5,"column_end":51,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"use the `?` operator to extract the `Option<&PyAny>` value, propagating a `Result::Err` value to the caller","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":25025,"byte_end":25025,"line_start":690,"line_end":690,"column_start":38,"column_end":38,"is_primary":true,"text":[{"text":"        let ts_any = v.get_item(\"ts\").ok_or_else(|| PyErr::new::<pyo3::exceptions::PyKeyError, _>(\"ts missing\"))?;","highlight_start":38,"highlight_end":38}],"label":null,"suggested_replacement":"?","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null},{"message":"there is a method `or_else` with a similar name","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":25026,"byte_end":25036,"line_start":690,"line_end":690,"column_start":39,"column_end":49,"is_primary":true,"text":[{"text":"        let ts_any = v.get_item(\"ts\").ok_or_else(|| PyErr::new::<pyo3::exceptions::PyKeyError, _>(\"ts missing\"))?;","highlight_start":39,"highlight_end":49}],"label":null,"suggested_replacement":"or_else","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `ok_or_else` found for enum `Result` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:690:39\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m690\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   let ts_any = v.get_item(\"ts\").ok_or_else(|| PyErr::new::<pyo3::exceptions::PyKeyError, _\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the method `ok_or_else` exists on the type `Option<&PyAny>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/rustc/1159e78c4747b02ef996e55082b704c09b970588/library/core/src/option.rs:1356:5\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use the `?` operator to extract the `Option<&PyAny>` value, propagating a `Result::Err` value to the caller\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m690\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let ts_any = v.get_item(\"ts\")\u001b[0m\u001b[0m\u001b[38;5;10m?\u001b[0m\u001b[0m.ok_or_else(|| PyErr::new::<pyo3::exceptions::PyKeyError, _>(\"ts missing\"))?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a method `or_else` with a similar name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m690\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        let ts_any = v.get_item(\"ts\").\u001b[0m\u001b[0m\u001b[38;5;9mok_or_else\u001b[0m\u001b[0m(|| PyErr::new::<pyo3::exceptions::PyKeyError, _>(\"ts missing\"))?;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m690\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        let ts_any = v.get_item(\"ts\").\u001b[0m\u001b[0m\u001b[38;5;10mor_else\u001b[0m\u001b[0m(|| PyErr::new::<pyo3::exceptions::PyKeyError, _>(\"ts missing\"))?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no method named `ok_or_else` found for enum `Result` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":25193,"byte_end":25203,"line_start":692,"line_end":692,"column_start":45,"column_end":55,"is_primary":true,"text":[{"text":"        let close_any = v.get_item(\"close\").ok_or_else(|| PyErr::new::<pyo3::exceptions::PyKeyError, _>(\"close missing\"))?;","highlight_start":45,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the method `ok_or_else` exists on the type `Option<&PyAny>`","code":null,"level":"note","spans":[{"file_name":"/rustc/1159e78c4747b02ef996e55082b704c09b970588/library/core/src/option.rs","byte_start":50278,"byte_end":50398,"line_start":1356,"line_end":1358,"column_start":5,"column_end":51,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"use the `?` operator to extract the `Option<&PyAny>` value, propagating a `Result::Err` value to the caller","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":25192,"byte_end":25192,"line_start":692,"line_end":692,"column_start":44,"column_end":44,"is_primary":true,"text":[{"text":"        let close_any = v.get_item(\"close\").ok_or_else(|| PyErr::new::<pyo3::exceptions::PyKeyError, _>(\"close missing\"))?;","highlight_start":44,"highlight_end":44}],"label":null,"suggested_replacement":"?","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null},{"message":"there is a method `or_else` with a similar name","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":25193,"byte_end":25203,"line_start":692,"line_end":692,"column_start":45,"column_end":55,"is_primary":true,"text":[{"text":"        let close_any = v.get_item(\"close\").ok_or_else(|| PyErr::new::<pyo3::exceptions::PyKeyError, _>(\"close missing\"))?;","highlight_start":45,"highlight_end":55}],"label":null,"suggested_replacement":"or_else","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `ok_or_else` found for enum `Result` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:692:45\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m692\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   let close_any = v.get_item(\"close\").ok_or_else(|| PyErr::new::<pyo3::exceptions::PyKeyEr\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the method `ok_or_else` exists on the type `Option<&PyAny>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/rustc/1159e78c4747b02ef996e55082b704c09b970588/library/core/src/option.rs:1356:5\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use the `?` operator to extract the `Option<&PyAny>` value, propagating a `Result::Err` value to the caller\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m692\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let close_any = v.get_item(\"close\")\u001b[0m\u001b[0m\u001b[38;5;10m?\u001b[0m\u001b[0m.ok_or_else(|| PyErr::new::<pyo3::exceptions::PyKeyError, _>(\"close missing\"))?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a method `or_else` with a similar name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m692\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        let close_any = v.get_item(\"close\").\u001b[0m\u001b[0m\u001b[38;5;9mok_or_else\u001b[0m\u001b[0m(|| PyErr::new::<pyo3::exceptions::PyKeyError, _>(\"close missing\"))?;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m692\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        let close_any = v.get_item(\"close\").\u001b[0m\u001b[0m\u001b[38;5;10mor_else\u001b[0m\u001b[0m(|| PyErr::new::<pyo3::exceptions::PyKeyError, _>(\"close missing\"))?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no method named `extract` found for enum `Option` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":25414,"byte_end":25421,"line_start":695,"line_end":695,"column_start":42,"column_end":49,"is_primary":true,"text":[{"text":"        let signal: Vec<i8> = signal_any.extract()?;","highlight_start":42,"highlight_end":49}],"label":"this is an associated function, not a method","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"found the following associated functions; to be used as methods, functions must have a `self` parameter","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the candidate is defined in the trait `pyo3::FromPyObject`","code":null,"level":"note","spans":[{"file_name":"/home/javi/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-0.20.3/src/conversion.rs","byte_start":7495,"byte_end":7544,"line_start":222,"line_end":222,"column_start":5,"column_end":54,"is_primary":true,"text":[{"text":"    fn extract(ob: &'source PyAny) -> PyResult<Self>;","highlight_start":5,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the method `extract` exists on the type `&PyAny`","code":null,"level":"note","spans":[{"file_name":"/home/javi/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-0.20.3/src/types/any.rs","byte_start":31846,"byte_end":31931,"line_start":949,"line_end":951,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"    pub fn extract<'a, D>(&'a self) -> PyResult<D>","highlight_start":5,"highlight_end":1},{"text":"    where","highlight_start":1,"highlight_end":1},{"text":"        D: FromPyObject<'a>,","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"use associated function syntax instead","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":25403,"byte_end":25423,"line_start":695,"line_end":695,"column_start":31,"column_end":51,"is_primary":true,"text":[{"text":"        let signal: Vec<i8> = signal_any.extract()?;","highlight_start":31,"highlight_end":51}],"label":null,"suggested_replacement":"Option<&PyAny>::extract()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null},{"message":"consider using `Option::expect` to unwrap the `&PyAny` value, panicking if the value is an `Option::None`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":25413,"byte_end":25413,"line_start":695,"line_end":695,"column_start":41,"column_end":41,"is_primary":true,"text":[{"text":"        let signal: Vec<i8> = signal_any.extract()?;","highlight_start":41,"highlight_end":41}],"label":null,"suggested_replacement":".expect(\"REASON\")","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `extract` found for enum `Option` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:695:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m695\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let signal: Vec<i8> = signal_any.extract()?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthis is an associated function, not a method\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: found the following associated functions; to be used as methods, functions must have a `self` parameter\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the candidate is defined in the trait `pyo3::FromPyObject`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/javi/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-0.20.3/src/conversion.rs:222:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn extract(ob: &'source PyAny) -> PyResult<Self>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the method `extract` exists on the type `&PyAny`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/javi/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-0.20.3/src/types/any.rs:949:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m949\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn extract<'a, D>(&'a self) -> PyResult<D>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m950\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m951\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        D: FromPyObject<'a>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|____________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use associated function syntax instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m695\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        let signal: Vec<i8> = \u001b[0m\u001b[0m\u001b[38;5;9msignal_any.extract()\u001b[0m\u001b[0m?;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m695\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        let signal: Vec<i8> = \u001b[0m\u001b[0m\u001b[38;5;10mOption<&PyAny>::extract()\u001b[0m\u001b[0m?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider using `Option::expect` to unwrap the `&PyAny` value, panicking if the value is an `Option::None`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m695\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let signal: Vec<i8> = signal_any\u001b[0m\u001b[0m\u001b[38;5;10m.expect(\"REASON\")\u001b[0m\u001b[0m.extract()?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no method named `extract` found for enum `Option` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":25501,"byte_end":25508,"line_start":698,"line_end":698,"column_start":29,"column_end":36,"is_primary":true,"text":[{"text":"            Ok(x) => Some(x.extract::<Vec<f64>>()?),","highlight_start":29,"highlight_end":36}],"label":"this is an associated function, not a method","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"found the following associated functions; to be used as methods, functions must have a `self` parameter","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the candidate is defined in the trait `pyo3::FromPyObject`","code":null,"level":"note","spans":[{"file_name":"/home/javi/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-0.20.3/src/conversion.rs","byte_start":7495,"byte_end":7544,"line_start":222,"line_end":222,"column_start":5,"column_end":54,"is_primary":true,"text":[{"text":"    fn extract(ob: &'source PyAny) -> PyResult<Self>;","highlight_start":5,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the method `extract` exists on the type `&PyAny`","code":null,"level":"note","spans":[{"file_name":"/home/javi/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-0.20.3/src/types/any.rs","byte_start":31846,"byte_end":31931,"line_start":949,"line_end":951,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"    pub fn extract<'a, D>(&'a self) -> PyResult<D>","highlight_start":5,"highlight_end":51},{"text":"    where","highlight_start":1,"highlight_end":10},{"text":"        D: FromPyObject<'a>,","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"use associated function syntax instead","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":25499,"byte_end":25522,"line_start":698,"line_end":698,"column_start":27,"column_end":50,"is_primary":true,"text":[{"text":"            Ok(x) => Some(x.extract::<Vec<f64>>()?),","highlight_start":27,"highlight_end":50}],"label":null,"suggested_replacement":"Option<&PyAny>::extract()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null},{"message":"consider using `Option::expect` to unwrap the `&PyAny` value, panicking if the value is an `Option::None`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":25500,"byte_end":25500,"line_start":698,"line_end":698,"column_start":28,"column_end":28,"is_primary":true,"text":[{"text":"            Ok(x) => Some(x.extract::<Vec<f64>>()?),","highlight_start":28,"highlight_end":28}],"label":null,"suggested_replacement":".expect(\"REASON\")","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `extract` found for enum `Option` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:698:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m698\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Ok(x) => Some(x.extract::<Vec<f64>>()?),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthis is an associated function, not a method\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: found the following associated functions; to be used as methods, functions must have a `self` parameter\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the candidate is defined in the trait `pyo3::FromPyObject`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/javi/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-0.20.3/src/conversion.rs:222:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn extract(ob: &'source PyAny) -> PyResult<Self>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the method `extract` exists on the type `&PyAny`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/javi/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-0.20.3/src/types/any.rs:949:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m949\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn extract<'a, D>(&'a self) -> PyResult<D>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m950\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m951\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        D: FromPyObject<'a>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|____________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use associated function syntax instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m698\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Ok(x) => Some(\u001b[0m\u001b[0m\u001b[38;5;9mx.extract::<Vec<f64>>()\u001b[0m\u001b[0m?),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m698\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Ok(x) => Some(\u001b[0m\u001b[0m\u001b[38;5;10mOption<&PyAny>::extract()\u001b[0m\u001b[0m?),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider using `Option::expect` to unwrap the `&PyAny` value, panicking if the value is an `Option::None`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m698\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            Ok(x) => Some(x\u001b[0m\u001b[0m\u001b[38;5;10m.expect(\"REASON\")\u001b[0m\u001b[0m.extract::<Vec<f64>>()?),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 5 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 5 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0308, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0308, E0599.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0308`.\u001b[0m\n"}
